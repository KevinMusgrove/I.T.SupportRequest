{"version":3,"sources":["NavBar.js","ErrorMessage.js","GraphService.js","Welcome.js","App.js","serviceWorker.js","index.js","Config.js"],"names":["UserAvatar","props","avatar","src","alt","className","style","width","AuthNavItem","isAuthenticated","UncontrolledDropdown","DropdownToggle","nav","caret","user","DropdownMenu","right","displayName","email","DropdownItem","divider","onClick","authButtonMethod","NavItem","NavLink","NavBar","toggle","bind","state","isOpen","this","setState","Navbar","color","dark","expand","fixed","Container","NavbarBrand","href","fontWeight","NavbarToggler","Collapse","navbar","Nav","React","Component","ErrorMessage","debug","Alert","message","graph","require","getAuthenticatedClient","accessToken","Client","init","authProvider","done","sendEmail","firstName","lastName","location","phone","device","priority","issueDesc","managerEmail","files","a","client","sendMail","subject","attachments","body","contentType","content","toRecipients","emailAddress","address","ccRecipients","saveToSentItems","api","post","res","getUserBlob","fetch","headers","then","response","status","blob","catch","err","getUserManager","get","manager","mail","getUserDetails","fileUpload","createRef","registerPlugin","FilePondPluginFileEncode","FilePondPluginImagePreview","Option","Select","RequestForm","devices","locations","priorites","selectDevice","value","prevState","isLoading","priorityValue","locationValue","phoneValue","deviceValue","selectLocation","selectPriority","selectPhone","submitFormMethod","ClearForm","event","preventDefault","UserAgentApplication","acquireTokenSilent","scopes","config","document","getElementById","cellPhone","bussinessPhone","filePondObjects","current","getFiles","trim","notifier","error","forEach","file","push","filename","getFileEncodeBase64String","configure","autoClose","position","delay","closeOnClick","pauseOnHover","onlyLast","rtl","newestOnTop","animation","in","out","duration","success","tbPhone","length","removeFile","console","log","id","type","defaultValue","placeholder","required","showSearch","size","filterOption","onChange","key","map","d","rows","allowMultiple","ref","height","visible","e","Button","Welcome","App","userAgentApplication","auth","clientId","appId","cache","cacheLocation","storeAuthStateInCookie","getAccount","getUserProfile","loginPopup","prompt","errorCode","errParts","split","logout","blobImage","reader","FileReader","readAsDataURL","onloadend","base64data","result","givenName","surname","userPrincipalName","mobilePhone","businessPhones","JSON","stringify","login","exact","path","render","Boolean","window","hostname","match","ReactDOM","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.88ba9e60.chunk.js","sourcesContent":["import React from 'react';\r\nimport {\r\n  Collapse,\r\n  Container,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  UncontrolledDropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem } from 'reactstrap';\r\nimport '@fortawesome/fontawesome-free/css/all.css';\r\n\r\nfunction UserAvatar(props) {\r\n  // If a user avatar is available, return an img tag with the pic\r\n  if (props.avatar) {\r\n    return <img\r\n            src={props.avatar} alt=\"user\"\r\n            className=\"rounded-circle align-self-center mr-2\"\r\n            style={{width: '32px'}}></img>;\r\n  }\r\n\r\n  // No avatar available, return a default icon\r\n  return <i\r\n          className=\"far fa-user-circle fa-lg rounded-circle align-self-center mr-2\"\r\n          style={{width: '32px'}}></i>;\r\n}\r\n\r\nfunction AuthNavItem(props) {\r\n  // If authenticated, return a dropdown with the user's info and a\r\n  // sign out button\r\n  if (props.isAuthenticated) {\r\n    return (\r\n      <UncontrolledDropdown>\r\n        <DropdownToggle nav caret>\r\n          <UserAvatar user={props.user} avatar={props.avatar}/>\r\n        </DropdownToggle>\r\n        <DropdownMenu right>\r\n          <h5 className=\"dropdown-item-text mb-0\">{props.user.displayName}</h5>\r\n          <p className=\"dropdown-item-text text-muted mb-0\">{props.user.email}</p>\r\n          <DropdownItem divider />\r\n          <DropdownItem onClick={props.authButtonMethod}>Sign Out</DropdownItem>\r\n        </DropdownMenu>\r\n      </UncontrolledDropdown>\r\n    );\r\n  }\r\n\r\n  // Not authenticated, return a sign in link\r\n  return (\r\n    <NavItem>\r\n      <NavLink onClick={props.authButtonMethod}>Sign In</NavLink>\r\n    </NavItem>\r\n  );\r\n}\r\n\r\nexport default class NavBar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.toggle = this.toggle.bind(this);\r\n    this.state = {\r\n      isOpen: false\r\n    };\r\n  }\r\n\r\n  toggle() {\r\n    this.setState({\r\n      isOpen: !this.state.isOpen\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Navbar color=\"dark\" dark expand=\"md\" fixed=\"top\">\r\n          <Container>\r\n            <NavbarBrand href=\"/\" style={{fontWeight:'500'}}>I.T. Support Request</NavbarBrand>\r\n            <NavbarToggler onClick={this.toggle} />\r\n            <Collapse isOpen={this.state.isOpen} navbar>\r\n              <Nav className=\"mr-auto\" navbar>\r\n              </Nav>\r\n              <Nav className=\"justify-content-end\" navbar>                \r\n                <AuthNavItem\r\n                  isAuthenticated={this.props.isAuthenticated}\r\n                  authButtonMethod={this.props.authButtonMethod}\r\n                  user={this.props.user} avatar={this.props.avatar} />\r\n              </Nav>\r\n            </Collapse>\r\n          </Container>\r\n        </Navbar>\r\n      </div>\r\n    );\r\n  }\r\n}","import React from 'react';\r\nimport { Alert } from 'reactstrap';\r\n\r\nexport default class ErrorMessage extends React.Component {\r\n  render() {\r\n    let debug = null;\r\n    if (this.props.debug) {\r\n      debug = <pre className=\"alert-pre border bg-light p-2\"><code>{this.props.debug}</code></pre>;\r\n    }\r\n    return (\r\n      <Alert color=\"danger\">\r\n        <p className=\"mb-3\">{this.props.message}</p>\r\n        {debug}\r\n      </Alert>\r\n    );\r\n  }\r\n}","import { async } from 'q';\r\nvar graph = require('@microsoft/microsoft-graph-client');\r\n\r\nfunction getAuthenticatedClient(accessToken) {\r\n  // Initialize Graph client\r\n  const client = graph.Client.init({\r\n    // Use the provided access token to authenticate\r\n    // requests\r\n    authProvider: (done) => {\r\n      done(null, accessToken.accessToken);\r\n    }\r\n  });\r\n  return client;\r\n}\r\n\r\nexport async function sendEmail(accessToken,firstName,lastName,location,email,phone,device,priority,issueDesc,managerEmail,files){\r\n    const client = getAuthenticatedClient(accessToken);\r\n    var t = managerEmail;\r\n    debugger;\r\n    let sendMail;\r\n    if(managerEmail)\r\n    {\r\n       sendMail = {      \r\n        message: {\r\n          subject: \"New Support Request\",\r\n          attachments: files,         \r\n           body: {\r\n            contentType: \"Html\",\r\n            content: \r\n            `<body style=\"font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif; padding:5px;\">\r\n            <span style=\"font-weight: bold\">User Having Issue: </span>${firstName} ${lastName}\r\n            <br/>\r\n            <span style=\"font-weight: bold\">User's Location: </span>${location}\r\n            <br/>\r\n            <span style=\"font-weight: bold\">User's Email: </span>${email}<a href=\"mailto:${email}\"></a>\r\n            <br/>\r\n            <span style=\"font-weight: bold\">User's Phone Number: </span><a href=\"tel:${phone}\">${phone}</a>\r\n            <br/>\r\n            <span style=\"font-weight: bold\">Type of Device with Issue:</span> ${device}\r\n            <br/>\r\n            <span style=\"font-weight: bold\">Priority Level:</span> ${priority}\r\n            <br/><br/>\r\n            <span style=\"font-weight: bold\">Issue Description:</span> ${issueDesc}\r\n            </body>`\r\n          },\r\n          toRecipients: [\r\n            {\r\n              emailAddress: {\r\n                address: \"Kevin.Musgrove@atb-tech.com\"\r\n              }\r\n            }\r\n          ],          \r\n          ccRecipients:[\r\n            {\r\n              emailAddress:{\r\n                address:managerEmail\r\n              }\r\n            }\r\n          ]                    \r\n        },        \r\n        saveToSentItems: \"true\"\r\n      };\r\n    }\r\n    else{\r\n        sendMail = {      \r\n        message: {\r\n          subject: \"New Support Request\",\r\n          attachments: files,         \r\n           body: {\r\n            contentType: \"Html\",\r\n            content: \r\n            `<body style=\"font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif; padding:5px;\">\r\n            <span style=\"font-weight: bold\">User Having Issue: </span>${firstName} ${lastName}\r\n            <br/>\r\n            <span style=\"font-weight: bold\">User's Location: </span>${location}\r\n            <br/>\r\n            <span style=\"font-weight: bold\">User's Email: </span>${email}<a href=\"mailto:${email}\"></a>\r\n            <br/>\r\n            <span style=\"font-weight: bold\">User's Phone Number: </span><a href=\"tel:${phone}\">${phone}</a>\r\n            <br/>\r\n            <span style=\"font-weight: bold\">Type of Device with Issue:</span> ${device}\r\n            <br/>\r\n            <span style=\"font-weight: bold\">Priority Level:</span> ${priority}\r\n            <br/><br/>\r\n            <span style=\"font-weight: bold\">Issue Description:</span> ${issueDesc}\r\n            </body>`\r\n          },\r\n          toRecipients: [\r\n            {\r\n              emailAddress: {\r\n                address: \"Kevin.Musgrove@atb-tech.com\"\r\n              }\r\n            }\r\n          ]          \r\n        },        \r\n        saveToSentItems: \"true\"\r\n      };\r\n    }          \r\n      let res = await client.api('/me/sendMail').post(sendMail);\r\n      return res;\r\n}\r\n\r\nexport async function getUserBlob(accessToken){\r\n  const blob = await fetch('https://graph.microsoft.com/beta/me/photo/$value', {\r\n    headers: {\r\n      'Authorization': \"Bearer \" + accessToken\r\n    }\r\n  })\r\n  .then(async response => {\r\n    if(response.status == 200)\r\n    {\r\n      const blob = await response.blob();\r\n      return blob\r\n    }\r\n    else{\r\n      return \"\"\r\n    }\r\n    \r\n  }).catch(err =>{\r\n    debugger;\r\n  });\r\n  return blob;\r\n}\r\n\r\nexport async function getUserManager(accessToken){\r\n  try{\r\n    const client = getAuthenticatedClient(accessToken);\r\n    const manager = await client.api('/me/manager').get();    \r\n    if(manager){\r\n      return manager.mail;\r\n    }              \r\n  }\r\n  catch(err){\r\n    return \"\";\r\n  }  \r\n}\r\n\r\nexport async function getUserDetails(accessToken) {\r\n  const client = getAuthenticatedClient(accessToken);\r\n  const user = await client.api('/me').get();    \r\n  return user;\r\n}","import React from 'react';\r\nimport { Button } from 'reactstrap';\r\nimport { sendEmail } from './GraphService';\r\nimport config from './Config';\r\nimport { FilePond, registerPlugin } from 'react-filepond';\r\nimport 'filepond/dist/filepond.min.css';\r\nimport FilePondPluginFileEncode from 'filepond-plugin-file-encode';\r\nimport FilePondPluginImagePreview from 'filepond-plugin-image-preview';\r\nimport 'filepond-plugin-image-preview/dist/filepond-plugin-image-preview.min.css';\r\nimport notifier from \"simple-react-notifications\";\r\nimport \"simple-react-notifications/dist/index.css\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\"\r\nimport Loader from 'react-loader-spinner'\r\nimport { Select } from 'antd';\r\n\r\nlet fileUpload = React.createRef();\r\nregisterPlugin(FilePondPluginFileEncode);\r\nregisterPlugin(FilePondPluginImagePreview);\r\nconst { Option } = Select;\r\n\r\nclass RequestForm extends React.Component{\r\n  constructor(props) {\r\n    super(props);\r\n    this.submitFormMethod = this.submitFormMethod.bind(this);\r\n    this.ClearForm = this.ClearForm.bind(this);    \r\n    this.selectDevice = this.selectDevice.bind(this);\r\n    this.selectPriority = this.selectPriority.bind(this);\r\n    this.selectLocation = this.selectLocation.bind(this);\r\n    this.selectPhone = this.selectPhone.bind(this);\r\n    this.state = {\r\n      isLoading: false,\r\n      deviceValue:\"\",\r\n      priorityValue:\"Medium\",\r\n      locationValue:\"\",\r\n      phoneValue: \"\"\r\n    };\r\n  }\r\n\r\n  devices = [\"Laptop\",\"Desktop\",\"Monitor\",\"Bluetooth headset\",\"Wired headset\",\"Cell phone\",\"Desk phone\",\"Keyboard\",\"Mouse\",\"Speakers\",\"Printer\",\"Tablet\",\"Not listed\"];\r\n  locations = [\"Location 1\",\" Location 2\",\" Location 3\"];\r\n  priorites = [\"High\",\"Medium\",\"Low\"]\r\n\r\n  async submitFormMethod(event,props){    \r\n    try{                          \r\n      event.preventDefault();            \r\n      var accessToken = await props.UserAgentApplication.acquireTokenSilent({\r\n        scopes: config.scopes\r\n      });\r\n      if (accessToken) {\r\n        this.setState({isLoading:true}); \r\n        let firstName = document.getElementById(\"tbFirstname\").value;        \r\n        let lastName = document.getElementById(\"tbLastname\").value;\r\n        let email = document.getElementById(\"tbEmail\").value;\r\n        let issueDesc = document.getElementById(\"tbIssueDesc\").value;        \r\n        let location = this.state.locationValue;        \r\n        let phone = this.state.phoneValue || this.props.user.cellPhone || this.props.user.bussinessPhone || document.getElementById(\"tbPhone\").value;\r\n        let device = this.state.deviceValue;\r\n        let priority = this.state.priorityValue;        \r\n        let filePondObjects = fileUpload.current.getFiles();\r\n        let files = [];\r\n        if(firstName.trim() == \"\" || lastName.trim() == \"\" || location.trim() == \"\" || email.trim() == \"\" || phone.trim() == \"\" || device.trim() == \"\" || priority.trim() == \"\" || issueDesc.trim() == \"\"){\r\n          notifier.error(`Error: Please fill out all required fields.`);\r\n          this.setState({isLoading:false}); \r\n          return;\r\n        }\r\n        filePondObjects.forEach(file => {                  \r\n            files.push({\r\n                \"@odata.type\": \"#microsoft.graph.fileAttachment\",\r\n                \"name\": `${file.filename}`,\r\n                \"contentBytes\": `${file.getFileEncodeBase64String()}`\r\n            })\r\n        });\r\n        await sendEmail(accessToken,firstName,lastName,location,email,phone,device,priority,issueDesc,props.managerEmail,files);\r\n        //Show success method.\r\n        notifier.configure({\r\n          autoClose: 3000,\r\n          width: 275,\r\n          position: \"top-right\",\r\n          delay: 0,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          onlyLast: false,\r\n          rtl: false,\r\n          newestOnTop: true,\r\n          animation: {\r\n            in: \"zoomIn\",\r\n            out: \"zoomOut\",\r\n            duration: 400\r\n          }\r\n        });\r\n        notifier.success(\"Request successfully sent.\");  \r\n        //notifier.info(\"Someone from ATB will be reaching out as soon as posible.\")       \r\n        this.ClearForm();\r\n      }\r\n      else{\r\n        // have user reauthenticate\r\n        props.authButtonMethod();\r\n      }\r\n    }\r\n    catch(err){   \r\n      debugger;   \r\n        //Show error  \r\n        notifier.configure({\r\n          autoClose: 3000,\r\n          width: 275,\r\n          position: \"top-right\",\r\n          delay: 0,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          onlyLast: false,\r\n          rtl: false,\r\n          newestOnTop: true,\r\n          animation: {\r\n            in: \"zoomIn\",\r\n            out: \"zoomOut\",\r\n            duration: 400\r\n          }\r\n        });      \r\n        notifier.error(`Error:  ${err.body}`);\r\n        this.setState({isLoading:false}); \r\n    }\r\n}\r\n\r\n ClearForm(){    \r\n  var tbPhone = document.getElementById(\"tbPhone\");\r\n  if(tbPhone)\r\n  {\r\n    tbPhone.value = \"\";\r\n  }\r\n  this.setState({\r\n    isLoading: false,deviceValue:\"\",priorityValue:\"Medium\",locationValue:\"\",phoneValue:\"\"\r\n  });\r\n  document.getElementById(\"tbIssueDesc\").value = \"\";    \r\n  if(fileUpload.current.getFiles().length != 0){                \r\n      fileUpload.current.getFiles().forEach(file => {\r\n          fileUpload.current.removeFile(file);\r\n      });        \r\n  }\r\n}\r\n\r\nselectDevice = value => {\r\n   this.setState((prevState, props) =>{\r\n     return{isLoading:prevState.isLoading,priorityValue:prevState.priorityValue,locationValue:prevState.locationValue,phoneValue:prevState.phoneValue,deviceValue:value}\r\n   })\r\n}\r\n\r\nselectLocation = value => {\r\n  this.setState((prevState, props) =>{\r\n    return{isLoading:prevState.isLoading,priorityValue:prevState.priorityValue,deviceValue:prevState.deviceValue,phoneValue:prevState.phoneValue,locationValue:value}\r\n  })\r\n}\r\n\r\nselectPriority = value => {\r\n  this.setState((prevState, props) =>{\r\n    return{isLoading:prevState.isLoading,deviceValue:prevState.deviceValue,locationValue:prevState.locationValue,phoneValue:prevState.phoneValue,priorityValue:value}\r\n  })\r\n}\r\nselectPhone= value => {\r\n  this.setState((prevState, props) =>{\r\n    return{isLoading:prevState.isLoading,deviceValue:prevState.deviceValue,locationValue:prevState.locationValue,priorityValue:prevState.priorityValue,phoneValue:value}\r\n  })\r\n}\r\n\r\n  render(){\r\n  console.log(this.props.user)  \r\n  if (this.props.isAuthenticated) {\r\n    return (\r\n      <div>\r\n        <h4 className=\"display-10 text-center mb-3\" id=\"appHeader\">\r\n            New I.T. Support Request\r\n        </h4>\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n            <div className=\"col-md-6 offset-md-3\">\r\n              <form>\r\n                <div className=\"form-group\">    \r\n                    <label className=\"inputLabel\">* First Name</label>   \r\n                    <input type=\"text\" className=\"form-control\" id=\"tbFirstname\" defaultValue={this.props.user.firstName} placeholder=\"First Name\" required={true}/>                                                            \r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label className=\"inputLabel\">* Last Name</label>   \r\n                  <input type=\"text\" className=\"form-control\" id=\"tbLastname\" defaultValue={this.props.user.lastName} placeholder=\"Last Name\" required/>\r\n                </div>\r\n                    <div className=\"form-group\">\r\n                        <label className=\"inputLabel\">* Email</label>   \r\n                        <input type=\"text\" className=\"form-control\" id=\"tbEmail\" defaultValue={this.props.user.email} placeholder=\"Email\" required/>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label className=\"inputLabel\">* Phone</label>   \r\n                        {this.props.user.cellPhone && this.props.user.bussinessPhone ? \r\n                            <Select                      \r\n                              value={this.state.phoneValue || this.props.user.cellPhone || this.props.user.bussinessPhone}\r\n                              defaultValue={this.props.user.cellPhone || this.props.user.bussinessPhone}  \r\n                              showSearch={true}\r\n                              size=\"large\"\r\n                              placeholder=\"Select Phone Number\"                                            \r\n                              filterOption={true}                      \r\n                              onChange={this.selectPhone}\r\n                              style={{ width: '100%' }}\r\n                            >                            \r\n                              <Option key={this.props.user.cellPhone}>{this.props.user.cellPhone}</Option>\r\n                              <Option key={this.props.user.bussinessPhone}>{this.props.user.bussinessPhone}</Option>                            \r\n                            </Select>\r\n                            :<input type=\"text\" className=\"form-control\" id=\"tbPhone\" defaultValue={this.props.user.cellPhone || this.props.user.bussinessPhone} placeholder=\"Phone Number\" required/>\r\n                        }                        \r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                      <label className=\"inputLabel\">* Location</label>   \r\n                      <Select                      \r\n                        value={this.state.locationValue}\r\n                        showSearch={true}\r\n                        size=\"large\"\r\n                        placeholder=\"Select Location\"                                            \r\n                        filterOption={true}                      \r\n                        onChange={this.selectLocation}\r\n                        style={{ width: '100%' }}\r\n                      >\r\n                        {this.locations.map(d => (\r\n                          <Option key={d}>{d}</Option>\r\n                        ))}\r\n                      </Select>\r\n                    </div>                                  \r\n                    <div className=\"form-group\">\r\n                      <label className=\"inputLabel\">* Issue Priority</label>   \r\n                      <Select                      \r\n                        value={this.state.priorityValue}\r\n                        defaultValue=\"Medium\"\r\n                        showSearch={true}\r\n                        size=\"large\"\r\n                        placeholder=\"Select Priority Level\"                                            \r\n                        filterOption={true}                      \r\n                        onChange={this.selectPriority}\r\n                        style={{ width: '100%' }}\r\n                      >\r\n                        {this.priorites.map(d => (\r\n                          <Option key={d}>{d}</Option>\r\n                        ))}\r\n                      </Select>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                      <label className=\"inputLabel\">* Device with Issue</label>   \r\n                      <Select                      \r\n                        value={this.state.deviceValue}\r\n                        showSearch={true}\r\n                        size=\"large\"\r\n                        placeholder=\"Select Device\"                                            \r\n                        filterOption={true}                      \r\n                        onChange={this.selectDevice}\r\n                        style={{ width: '100%' }}\r\n                      >\r\n                        {this.devices.map(d => (\r\n                          <Option key={d}>{d}</Option>\r\n                        ))}\r\n                      </Select>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label className=\"inputLabel\">* Issue Description</label>   \r\n                        <textarea className=\"form-control\" rows=\"3\" id=\"tbIssueDesc\" placeholder=\"Issue Description\" required></textarea> \r\n                    </div>\r\n                    <label className=\"inputLabel\">Attachments</label>   \r\n                    <FilePond id=\"fileControl\" allowMultiple={true} ref={fileUpload}/>\r\n                    <Loader\r\n                      type=\"TailSpin\"\r\n                      color=\"lightGray\"\r\n                      height={50}\r\n                      width={50}\r\n                      className=\"loader\"                      \r\n                      visible={this.state.isLoading}   \r\n                    />\r\n                    <div className=\"text-center mb-3\" id=\"btnSection\">\r\n                        <input type=\"button\" value=\"Reset Form\" id=\"btnClear\" onClick={() => this.ClearForm()} className=\"btn btn-danger\"/>\r\n                        <input type=\"submit\" value=\"Submit Form\" id=\"btnSubmit\" onClick={(e) => this.submitFormMethod(e,this.props)} className=\"btn btn-primary\"/>\r\n                    </div> \r\n              </form>\r\n            </div>\r\n        </div>\r\n      </div>\r\n      </div>\r\n    );\r\n  }\r\n  // Not authenticated, present a sign in button\r\n  return (\r\n    <div id=\"signIn\">      \r\n        <Button id=\"btnSignInMain\" onClick={this.props.authButtonMethod}>Sign in with Microsoft</Button>\r\n    </div>  \r\n  );\r\n}\r\n}\r\nexport default class Welcome extends React.Component {\r\n  render() {\r\n    return (\r\n        <div>\r\n          <RequestForm\r\n          isAuthenticated={this.props.isAuthenticated}\r\n          user={this.props.user}          \r\n          managerEmail={this.props.managerEmail}\r\n          UserAgentApplication={this.props.UserAgentApplication}\r\n          authButtonMethod={this.props.authButtonMethod} />          \r\n        </div>\r\n    );    \r\n  }\r\n}","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { Container } from 'reactstrap';\nimport NavBar from './NavBar';\nimport ErrorMessage from './ErrorMessage';\nimport Welcome from './Welcome';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport config from './Config';\nimport { UserAgentApplication } from 'msal';\nimport { getUserDetails, getUserBlob, getUserManager } from './GraphService';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n  \n    this.userAgentApplication = new UserAgentApplication({\n          auth: {\n              clientId: config.appId\n          },\n          cache: {\n              cacheLocation: \"localStorage\",\n              storeAuthStateInCookie: true\n          }\n      });\n  \n    var user = this.userAgentApplication.getAccount();\n  \n    this.state = {\n      isAuthenticated: (user !== null),\n      user: {},\n      files:{},\n      avatar:'',\n      managerEmail:'',\n      error: null,\n    };\n  \n    if (user) {\n      // Enhance user object with data from Graph\n      this.getUserProfile();   \n\n    }\n  }\n\n  async login() {\n    try {\n      await this.userAgentApplication.loginPopup(\n          {\n            scopes: config.scopes,\n            prompt: \"select_account\"\n        });\n      await this.getUserProfile();\n    }\n    catch(err) {\n      //debugger;\n      if(err.errorCode !== \"user_cancelled\")\n      {\n        var errParts = err.split('|');\n        this.setState({\n          isAuthenticated: false,\n          user: {},\n          avatar:'',\n          files:{},\n          error: { message: errParts[1], debug: errParts[0] }\n        });\n      }\n    }\n  }\n\n  logout() {\n    this.userAgentApplication.logout();\n  }\n\n  async getUserProfile() {\n    try {\n      // Get the access token silently\n      // If the cache contains a non-expired token, this function\n      // will just return the cached token. Otherwise, it will\n      // make a request to the Azure OAuth endpoint to get a token\n  \n      var accessToken = await this.userAgentApplication.acquireTokenSilent({\n        scopes: config.scopes\n      });\n  \n      if (accessToken) {\n        // Get the user's profile from Graph\n        var user = await getUserDetails(accessToken);\n        var managerEmail = await getUserManager(accessToken);\n        var blobImage = await getUserBlob(accessToken.accessToken);        \n        if(blobImage){\n          var reader = new FileReader();\n          reader.readAsDataURL(blobImage); \n          reader.onloadend = (e) => {\n              var base64data = reader.result;\n              this.setState({\n                avatar:base64data\n              });\n           }\n        }                   \n        this.setState({\n          isAuthenticated: true,\n          user: {\n            firstName: user.givenName,\n            lastName: user.surname,\n            displayName: user.displayName,\n            email: user.mail || user.userPrincipalName,\n            cellPhone: user.mobilePhone,\n            bussinessPhone: user.businessPhones[\"0\"] || null\n          },\n          error: null,\n          managerEmail:managerEmail\n        });\n      }\n    }\n    catch(err) {\n      var error = {};\n      if (typeof(err) === 'string') {\n        var errParts = err.split('|');\n        error = errParts.length > 1 ?\n          { message: errParts[1], debug: errParts[0] } :\n          { message: err };\n      } else {\n        error = {\n          message: err.message,\n          debug: JSON.stringify(err)\n        };\n      }\n  \n      this.setState({\n        isAuthenticated: false,\n        user: {},\n        error: error\n      });\n    }\n  }          \n\n  render() {\n    let error = null;\n    if (this.state.error) {\n      error = <ErrorMessage message={this.state.error.message} debug={this.state.error.debug} />;\n    }\n\n    return (\n      <Router>\n        <div>\n        <NavBar\n          isAuthenticated={this.state.isAuthenticated}\n          authButtonMethod={this.state.isAuthenticated ? this.logout.bind(this) : this.login.bind(this)}\n          user={this.state.user} avatar={this.state.avatar}/>\n          <Container>\n            {error}\n            <Route exact path=\"/\"\n              render={(props) =>\n            <Welcome {...props}\n              isAuthenticated={this.state.isAuthenticated}\n              UserAgentApplication={this.userAgentApplication}\n              user={this.state.user}\n              managerEmail={this.state.managerEmail}\n              files={this.state.files}\n              authButtonMethod={this.login.bind(this)} />\n              } />\n          </Container>\n        </div>\n      </Router>\n    );\n  }\n\n  setErrorMessage(message, debug) {\n    this.setState({\n      error: {message: message, debug: debug}\n    });\n  }\n}\n\nexport default App;","const isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","//Switch to atb tenant ID when changing to production environment. \r\nmodule.exports = {\r\n    appId: '271c203f-7708-4184-a030-0e2cdfdabbfe',\r\n    scopes: [\r\n      \"user.ReadWrite.All\",\r\n      \"Mail.Send\"\r\n    ]\r\n  };"],"sourceRoot":""}